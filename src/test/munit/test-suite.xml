<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
    xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
    xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
        
    <munit:config name="test-suite.xml" />

    <configuration-properties doc:name="Configuration properties" doc:id="c382dc50-b83c-41be-ad31-42ccb929d758" file="mule.test.properties" />
    <configuration-properties doc:name="Configuration properties" doc:id="6a3980a3-4151-419b-a718-17b1f2064d7f" file="common.properties" />
    
    <munit:before-test name="test-suite-Before_Test" description="Before tests actions" doc:id="7f8facb1-95ae-4456-9448-faf3a3a89dc9">
        <ee:transform doc:name="Prepare test account" doc:id="14fff0e7-f5d1-4743-a0e9-632a1f2e59af">
            <ee:message>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="testAccount"><![CDATA[%dw 2.0
output application/java
---
{
	Name: "Test account opportunity " ++ randomInt(1000),
	Description: "test description",
	Industry: "Education",
	NumberOfEmployees: 15000
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <salesforce:create type="Account" doc:name="Create test Account in instance A" doc:id="b6239231-ed3f-4ace-8b96-c7ff1f43ba66"
            config-ref="Salesforce_Sfdc_A_config">
            <salesforce:records><![CDATA[#[[vars.testAccount]]]]></salesforce:records>
        </salesforce:create>
        <ee:transform doc:name="Save test account Id" doc:id="edd2eb66-3a11-4806-9332-08ab0158a175">
            <ee:message>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="testAccount"><![CDATA[%dw 2.0
output application/java
---
vars.testAccount ++ {
	"Id": payload[0].Id
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="Prepare test data" doc:id="7c253cc1-4a09-4e71-a9c5-74e5dbbf5848">
            <ee:message>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="testDataNotMigrated"><![CDATA[%dw 2.0
output application/java
---
{
	"Name": "Test opportunity - not migrated " ++ randomInt(1000),
	"Amount": 1000,
	"StageName": "Stage",
	"CloseDate": now(),
	"AccountId": vars.testAccount.Id
}]]></ee:set-variable>
                <ee:set-variable variableName="testDataMigrated"><![CDATA[%dw 2.0
output application/java
---
{
	"Name": "Test opportunity - migrated " ++ randomInt(1000),
	"Amount": 6000,
	"StageName": "Stage",
	"CloseDate": now(),
	"AccountId": vars.testAccount.Id
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <salesforce:create doc:name="Create Opportunities in instance A" doc:id="d62c8e61-71a7-43f3-8aa0-b4b5cb5359a4" config-ref="Salesforce_Sfdc_A_config"
            type="Opportunity">
            <salesforce:records><![CDATA[#[[vars.testDataMigrated, vars.testDataNotMigrated]]]]></salesforce:records>
        </salesforce:create>
        <set-variable value="#[payload map ($.id)]" doc:name="Save Ids to variable sfdcAIds" doc:id="623a0d4f-c873-45e6-a7ee-89bc1e194721"
            variableName="sfdcAIds" />
        <munit-tools:mock-when doc:name="Mock email processor to avoid sending email" doc:id="17ab3357-3f08-4456-9f14-c41c281e06f1"
            processor="email:send">
            <munit-tools:then-return />
        </munit-tools:mock-when>
    </munit:before-test>
    <munit:test name="test-suite-businesslogicFlowTest" description="Test" doc:id="4ffcda90-21bf-4cd4-9460-09cf6ca578e5">
        <munit:execution>
            <flow-ref doc:name="Call businessLogicFlow" doc:id="3e0601a1-1b47-4974-83b0-8d30726559dd" name="businessLogicFlow" />
            <scripting:execute doc:name="Sleep for 30s until the processing is completed" doc:id="b09fe305-3000-4571-b824-8b555395ccb7"
                engine="groovy">
                <scripting:code>sleep(40000)</scripting:code>
            </scripting:execute>
            <salesforce:query doc:name="Query record should be migrated to instance B" doc:id="30d9f062-5da2-4b86-abc3-d90b21ee50f2"
                config-ref="Salesforce_Sfdc_B_config" target="resultMigrated">
                <salesforce:salesforce-query>SELECT Id, Name FROM Opportunity WHERE Name = ':name'</salesforce:salesforce-query>
                <salesforce:parameters><![CDATA[#[output application/java
---
{
	"name" : vars.testDataMigrated.Name
}]]]></salesforce:parameters>
            </salesforce:query>
            <set-variable value="#[[vars.resultMigrated[0].Id]]" doc:name="Save Ids to variable sfdcBIds" doc:id="2fca2232-2993-46b9-8ecc-b2aab99c83da"
                variableName="sfdcBIds" />
            <salesforce:query doc:name="Query record shouldn't be migrated to instance B" doc:id="f186b0c4-28aa-4707-9e53-15f7b4ffa345"
                config-ref="Salesforce_Sfdc_B_config" target="resultNotMigrated">
                <salesforce:salesforce-query>SELECT Id FROM Opportunity WHERE Name = ':name'</salesforce:salesforce-query>
                <salesforce:parameters><![CDATA[#[output application/java
---
{
	"name" : vars.testDataNotMigrated.Name
}]]]></salesforce:parameters>
            </salesforce:query>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert that we found migrated Opportunity in instance B" doc:id="fe941f4b-80b8-403b-81c8-cb58fa74d466"
                expression="#[vars.resultMigrated[0].Name]" is="#[MunitTools::equalTo(vars.testDataMigrated.Name)]" message="Record isn't found in instance B" />
            <munit-tools:assert-that doc:name="Assert that we didn't find Opportunity shouldn't be migrated in instance B"
                doc:id="7b3cab1f-3815-48b5-bcdb-92e8e8e3d876" expression="#[sizeOf(vars.resultNotMigrated)]" is="#[MunitTools::equalTo(0)]" message="Record is found in instance B" />
        </munit:validation>
    </munit:test>
    <munit:after-test name="test-suite-After_Test" description="After tests actions" doc:id="74fb2ade-7731-4e82-839b-3db8547da002">
        <salesforce:delete doc:name="Delete test data from instance A" doc:id="6d36c6d5-b29f-4876-956f-995b6c46bf9d" config-ref="Salesforce_Sfdc_A_config">
            <salesforce:delete-ids><![CDATA[#[vars.sfdcAIds]]]></salesforce:delete-ids>
        </salesforce:delete>
        <salesforce:delete doc:name="Delete test Account from instance A" doc:id="04f77025-d4a2-4aeb-af86-70e473d2f6a2" config-ref="Salesforce_Sfdc_A_config">
            <salesforce:delete-ids><![CDATA[#[[vars.testAccount.Id]]]]></salesforce:delete-ids>
        </salesforce:delete>
        <salesforce:delete doc:name="Delete test data from instance B" doc:id="72823ed5-ca72-47e5-abcd-427c4f782c35" config-ref="Salesforce_Sfdc_B_config">
            <salesforce:delete-ids><![CDATA[#[vars.sfdcBIds]]]></salesforce:delete-ids>
        </salesforce:delete>
    </munit:after-test>
</mule>
